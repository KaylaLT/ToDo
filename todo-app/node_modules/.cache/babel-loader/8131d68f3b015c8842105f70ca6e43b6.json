{"ast":null,"code":"var _jsxFileName = \"/Users/kaylathomas/Desktop/ToDo/todo-app/src/todoListItem.tsx\";\nimport React from 'react';\n/*to-do items will be used as a prop*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/* content for the list item*/\nexport const TodoListItem = ({\n  todo\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        textDecoration: todo.complete ? 'line-through' : undefined\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: todo.complete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), \" \", todo.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = TodoListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoListItem\");","map":{"version":3,"sources":["/Users/kaylathomas/Desktop/ToDo/todo-app/src/todoListItem.tsx"],"names":["React","TodoListItem","todo","textDecoration","complete","undefined","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA;;;;AAIA;AACA,OAAO,MAAMC,YAA6B,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AACvD,sBACE;AAAA,2BACE;AACE,MAAA,KAAK,EAAE;AAACC,QAAAA,cAAc,EAAED,IAAI,CAACE,QAAL,GAAgB,cAAhB,GAAiCC;AAAlD,OADT;AAAA,8BAGE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,EAAGH,IAAI,CAACE;AAAtC;AAAA;AAAA;AAAA;AAAA,cAHF,OAGsDF,IAAI,CAACI,IAH3D;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQE,CATG;KAAML,Y","sourcesContent":["import React from 'react';\n\n\n/*to-do items will be used as a prop*/\ninterface Props {\n  todo: Todo;\n}\n/* content for the list item*/ \nexport const TodoListItem: React.FC<Props> = ({todo}) => {\n  return (\n    <li>\n      <label\n        style={{textDecoration: todo.complete ? 'line-through' : undefined }}\n      >\n        <input type=\"checkbox\" checked= {todo.complete} /> {todo.text}\n      </label>\n    </li>\n  )};\n\n"]},"metadata":{},"sourceType":"module"}